diff -ru src/pulsecore/meson.build src/pulsecore/meson.build
--- src/pulsecore/meson.build	2023-10-02 15:58:31.196821000 -0600
+++ src/pulsecore/meson.build	2023-10-02 17:12:56.860398000 -0600
@@ -170,42 +170,6 @@
   orc_headers = [orc_h]
 endif
 
-# FIXME: walk through dependencies and add files
-
-# FIXME: SIMD support (ORC)
-simd = import('unstable-simd')
-simd_variants = [
-  { 'mmx' : ['remap_mmx.c', 'svolume_mmx.c'] },
-  { 'sse' : ['remap_sse.c', 'sconv_sse.c', 'svolume_sse.c'] },
-  { 'neon' : ['remap_neon.c', 'sconv_neon.c', 'mix_neon.c'] },
-]
-
-libpulsecore_simd_lib = []
-
-foreach simd_kwargs : simd_variants
-
-  if host_machine.cpu_family() == 'arm' and 'neon' in simd_kwargs
-    if not cc.compiles('''
-        #include <arm_neon.h>
-        int main() {
-            return sizeof(uint8x8_t) + sizeof(int32x4_t) + sizeof(float32x4_t);
-        }
-        ''', name : 'neon code')
-      continue
-    endif
-  endif
-
-  libpulsecore_simd = simd.check('libpulsecore_simd',
-    kwargs : simd_kwargs,
-    c_args : [pa_c_args],
-    include_directories : [configinc, topinc],
-    implicit_include_directories : false,
-    compiler : cc)
-
-  libpulsecore_simd_lib += libpulsecore_simd[0]
-  cdata.merge_from(libpulsecore_simd[1])
-endforeach
-
 if host_machine.system() == 'windows'
   libpulsecore_sources += ['mutex-win32.c',
     'poll-win32.c',
@@ -223,7 +187,6 @@
   install : true,
   install_rpath : privlibdir,
   install_dir : privlibdir,
-  link_with : libpulsecore_simd_lib,
   dependencies : [libm_dep, libpulsecommon_dep, ltdl_dep, shm_dep, sndfile_dep, database_dep, dbus_dep, libatomic_ops_dep, orc_dep, samplerate_dep, soxr_dep, speex_dep, x11_dep, libsystemd_dep, libintl_dep, platform_dep, tcpwrap_dep, platform_socket_dep,],
   implicit_include_directories : false)
 
